The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

This is an example text file in reStructuredText format.  First import
``add_integer`` from the ``0-add_integer`` module:

-------------------

>>> add_integer = __import__('0-add_integer').add_integer


# a = int, b = int
>>> add_integer(5, 2)
7

# a = negative int, b =  int
>>> add_integer(-5, 2)
-3

# a = 0, b = int
>>> add_integer(0, 2)
2

# a = float, b = int
>>> add_integer(1.2, 2)
3

# a = int, b = float
>>> add_integer(1, 2.6)
3

# a = float, b = float
>>> add_integer(5.9, 5.9)
10

# a = None, b = int
>>> add_integer(None, 89)
Traceback (most recent call last):
...
TypeError: a must be an integer

# a = int, b = None
>>> add_integer(89, None)
Traceback (most recent call last):
...
TypeError: b must be an integer

# a = None
>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

# a = str
>>> add_integer('puppy')
Traceback (most recent call last):
...
TypeError: a must be an integer

# a = int, b = str
>>> add_integer(5, 'doggo')
Traceback (most recent call last):
...
TypeError: b must be an integer

# a = str, b = str
>>> add_integer('brekkie', 'dindin')
Traceback (most recent call last):
...
TypeError: a must be an integer
